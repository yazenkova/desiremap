{"ast":null,"code":"var _jsxFileName = \"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/src/components/MapBoard/MapBoard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DesireList from \"./DesireList\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getDesireList } from \"../../actions/desireListActions\";\n\nclass MapBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getDesireList(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const desires = this.props.desireList.desires;\n    const errors = this.state.errors;\n    let BoardContent;\n\n    const boardAlgorithm = (errors, desires) => {\n      if (desires.length < 1) {\n        if (errors.mapNotFound) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, errors.mapNotFound);\n        } else if (errors.mapIdentifier) {\n          return React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, errors.mapIdentifier);\n        } else {\n          return React.createElement(\"div\", {\n            className: \"alert alert-info text-center\",\n            role: \"alert\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"No Desires on this map\");\n        }\n      } else {\n        return React.createElement(DesireList, {\n          desires_prop: desires,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, desires);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addDesire/\".concat(id),\n      className: \"btn btn-info mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Create Desire\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), BoardContent);\n  }\n\n}\n\nMapBoard.propTypes = {\n  desireList: PropTypes.object.isRequired,\n  getDesireList: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  desireList: state.desireList,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getDesireList\n})(MapBoard);","map":{"version":3,"sources":["/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/src/components/MapBoard/MapBoard.js"],"names":["React","Component","Link","DesireList","connect","PropTypes","getDesireList","MapBoard","constructor","state","errors","componentDidMount","id","props","match","params","componentWillReceiveProps","nextProps","setState","render","desires","desireList","BoardContent","boardAlgorithm","length","mapNotFound","mapIdentifier","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DesireList from \"./DesireList\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getDesireList } from \"../../actions/desireListActions\";\n\nclass MapBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getDesireList(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { desires } = this.props.desireList;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, desires) => {\n      if (desires.length < 1) {\n        if (errors.mapNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.mapNotFound}\n            </div>\n          );\n        } else if (errors.mapIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.mapIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Desires on this map\n            </div>\n          );\n        }\n      } else {\n        return <DesireList desires_prop={desires} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, desires);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addDesire/${id}`} className=\"btn btn-info mb-3\">\n          Create Desire\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nMapBoard.propTypes = {\n  desireList: PropTypes.object.isRequired,\n  getDesireList: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  desireList: state.desireList,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getDesireList })(MapBoard);\n"]},"metadata":{},"sourceType":"module"}