{"ast":null,"code":"import _defineProperty from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{getMap,createMap}from\"../../actions/mapActions\";import{connect}from\"react-redux\";import classnames from\"classnames\";var UpdateMap=/*#__PURE__*/function(_Component){_inherits(UpdateMap,_Component);//set state\nfunction UpdateMap(){var _this;_classCallCheck(this,UpdateMap);_this=_possibleConstructorReturn(this,_getPrototypeOf(UpdateMap).call(this));_this.state={id:\"\",mapName:\"\",mapIdentifier:\"\",description:\"\",start_date:\"\",end_date:\"\",errors:{}};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(UpdateMap,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors});}var _nextProps$map=nextProps.map,id=_nextProps$map.id,mapName=_nextProps$map.mapName,mapIdentifier=_nextProps$map.mapIdentifier,description=_nextProps$map.description,start_date=_nextProps$map.start_date,end_date=_nextProps$map.end_date;this.setState({id:id,mapName:mapName,mapIdentifier:mapIdentifier,description:description,start_date:start_date,end_date:end_date});}},{key:\"componentDidMount\",value:function componentDidMount(){var id=this.props.match.params.id;this.props.getMap(id,this.props.history);}},{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();var updateMap={id:this.state.id,mapName:this.state.mapName,mapIdentifier:this.state.mapIdentifier,description:this.state.description,start_date:this.state.start_date,end_date:this.state.end_date};this.props.createMap(updateMap,this.props.history);}},{key:\"render\",value:function render(){var errors=this.state.errors;return React.createElement(\"div\",{className:\"map\"},React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-md-8 m-auto\"},React.createElement(\"h5\",{className:\"display-4 text-center\"},\"Update Map form\"),React.createElement(\"hr\",null),React.createElement(\"form\",{onSubmit:this.onSubmit},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",className:classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.mapName}),placeholder:\"Map Name\",name:\"mapName\",value:this.state.mapName,onChange:this.onChange}),errors.mapName&&React.createElement(\"div\",{className:\"invalid-feedback\"},errors.mapName)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"text\",className:\"form-control form-control-lg\",placeholder:\"Unique Map ID\",name:\"mapIdentifier\",value:this.state.mapIdentifier,onChange:this.onChange,disabled:true})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"textarea\",{className:classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.description}),placeholder:\"Map Description\",name:\"description\",onChange:this.onChange,value:this.state.description}),errors.description&&React.createElement(\"div\",{className:\"invalid-feedback\"},errors.description)),React.createElement(\"h6\",null,\"Start Date\"),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"date\",className:\"form-control form-control-lg\",name:\"start_date\",value:this.state.start_date,onChange:this.onChange})),React.createElement(\"h6\",null,\"Estimated End Date\"),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{type:\"date\",className:\"form-control form-control-lg\",name:\"end_date\",value:this.state.end_date,onChange:this.onChange})),React.createElement(\"input\",{type:\"submit\",className:\"btn btn-info btn-block my-4\"}))))));}}]);return UpdateMap;}(Component);var mapStateToProps=function mapStateToProps(state){return{map:state.map.map,errors:state.errors};};export default connect(mapStateToProps,{getMap:getMap,createMap:createMap})(UpdateMap);","map":{"version":3,"sources":["/Users/yazenkova/Desktop/AgileIntPPMTool-master/desire-map-react-client/src/components/Map/UpdateMap.js"],"names":["React","Component","getMap","createMap","connect","classnames","UpdateMap","state","id","mapName","mapIdentifier","description","start_date","end_date","errors","onChange","bind","onSubmit","nextProps","setState","map","props","match","params","history","e","target","name","value","preventDefault","updateMap","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMap, createMap } from \"../../actions/mapActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateMap extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      mapName: \"\",\n      mapIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      mapName,\n      mapIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.map;\n\n    this.setState({\n      id,\n      mapName,\n      mapIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getMap(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateMap = {\n      id: this.state.id,\n      mapName: this.state.mapName,\n      mapIdentifier: this.state.mapIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createMap(updateMap, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"map\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Map form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.mapName,\n                    })}\n                    placeholder=\"Map Name\"\n                    name=\"mapName\"\n                    value={this.state.mapName}\n                    onChange={this.onChange}\n                  />\n                  {errors.mapName && (\n                    <div className=\"invalid-feedback\">{errors.mapName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Map ID\"\n                    name=\"mapIdentifier\"\n                    value={this.state.mapIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Map Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-info btn-block my-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateMap.propTypes = {\n  getMap: PropTypes.func.isRequired,\n  createMap: PropTypes.func.isRequired,\n  map: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  map: state.map.map,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getMap, createMap })(UpdateMap);\n"]},"metadata":{},"sourceType":"module"}