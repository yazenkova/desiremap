{"ast":null,"code":"import _defineProperty from \"/Users/yazenkova/Desktop/AgileIntPPMTool-master/ppmtool-react-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_MAPS, GET_MAP, DELETE_MAP } from \"../actions/types\";\nconst initialState = {\n  maps: [],\n  map: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MAPS:\n      return _objectSpread({}, state, {\n        maps: action.payload\n      });\n\n    case GET_MAP:\n      return _objectSpread({}, state, {\n        map: action.payload\n      });\n\n    case DELETE_MAP:\n      return _objectSpread({}, state, {\n        maps: state.maps.filter(map => map.mapIdentifier !== action.payload)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/yazenkova/Desktop/AgileIntPPMTool-master/ppmtool-react-client/src/reducers/mapReducer.js"],"names":["GET_MAPS","GET_MAP","DELETE_MAP","initialState","maps","map","state","action","type","payload","filter","mapIdentifier"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,GAAG,EAAE;AAFc,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFf;;AAKF,SAAKR,OAAL;AACE,+BACKK,KADL;AAEED,QAAAA,GAAG,EAAEE,MAAM,CAACE;AAFd;;AAKF,SAAKP,UAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWM,MAAX,CAAmBL,GAAD,IAASA,GAAG,CAACM,aAAJ,KAAsBJ,MAAM,CAACE,OAAxD;AAFR;;AAIF;AACE,aAAOH,KAAP;AAnBJ;AAqBD","sourcesContent":["import { GET_MAPS, GET_MAP, DELETE_MAP } from \"../actions/types\";\n\nconst initialState = {\n  maps: [],\n  map: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_MAPS:\n      return {\n        ...state,\n        maps: action.payload,\n      };\n\n    case GET_MAP:\n      return {\n        ...state,\n        map: action.payload,\n      };\n\n    case DELETE_MAP:\n      return {\n        ...state,\n        maps: state.maps.filter((map) => map.mapIdentifier !== action.payload),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}